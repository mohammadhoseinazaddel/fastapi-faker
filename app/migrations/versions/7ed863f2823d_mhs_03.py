"""mhs

Revision ID: 7ed863f2823d
Revises: 4dbbfaf38ea5
Create Date: 2023-05-01 06:17:06.697451

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7ed863f2823d'
down_revision = '4dbbfaf38ea5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fnc_refund',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(), nullable=True),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('order_uuid', sa.String(), nullable=False),
    sa.Column('order_user_id', sa.Integer(), nullable=False),
    sa.Column('merchant_id', sa.Integer(), nullable=False),
    sa.Column('merchant_user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_fnc_refund_id'), 'fnc_refund', ['id'], unique=False)
    op.create_index(op.f('ix_fnc_refund_merchant_id'), 'fnc_refund', ['merchant_id'], unique=False)
    op.create_table('ord_commission',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('merchant_id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('pgw_commission_constant', sa.Integer(), nullable=False),
    sa.Column('pgw_commission_rate', sa.Float(), nullable=False),
    sa.Column('pgw_fee_constant', sa.Integer(), nullable=True),
    sa.Column('pgw_fee_rate', sa.Float(), nullable=True),
    sa.Column('credit_commission_constant', sa.Integer(), nullable=False),
    sa.Column('credit_commission_rate', sa.Float(), nullable=False),
    sa.Column('credit_limit', sa.Integer(), nullable=False),
    sa.Column('decrease_fee_on_pay_gw_settle', sa.Boolean(), nullable=True),
    sa.Column('decrease_commission_on_refund', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ord_commission_id'), 'ord_commission', ['id'], unique=False)
    op.create_index('merchant_id', 'ord_commission', ['category'], unique=False)
    op.drop_index('fnc_commission.merchant_v_category', table_name='fnc_commission')
    op.drop_index('ix_fnc_commission_id', table_name='fnc_commission')
    op.drop_table('fnc_commission')
    op.drop_index('ix_ord_loan_id', table_name='ord_loan')
    op.drop_table('ord_loan')
    op.drop_index('ix_ord_debt_id', table_name='ord_debt')
    op.drop_table('ord_debt')
    op.add_column('fnc_transfer', sa.Column('ext_service_name', sa.String(), nullable=False))
    op.add_column('fnc_transfer', sa.Column('input_type', sa.String(), nullable=True))
    op.add_column('fnc_transfer', sa.Column('input_unique_id', sa.Integer(), nullable=True))
    op.add_column('fnc_transfer', sa.Column('error_message', sa.String(), nullable=True))
    op.alter_column('fnc_transfer', 'bank_profile_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('fnc_transfer', 'type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('fnc_transfer', 'amount',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ntf_sms', 'input_unique_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint('ntf_sms_input_type_input_unique_id_key', 'ntf_sms', type_='unique')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('ntf_sms_input_type_input_unique_id_key', 'ntf_sms', ['input_type', 'input_unique_id'])
    op.alter_column('ntf_sms', 'input_unique_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('fnc_transfer', 'amount',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('fnc_transfer', 'type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('fnc_transfer', 'bank_profile_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('fnc_transfer', 'error_message')
    op.drop_column('fnc_transfer', 'input_unique_id')
    op.drop_column('fnc_transfer', 'input_type')
    op.drop_column('fnc_transfer', 'ext_service_name')
    op.create_table('ord_debt',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('fund_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('settlement_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('payment_detail_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('paid_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fund_id'], ['ord_fund.id'], name='ord_debt_fund_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ord_debt_pkey'),
    sa.UniqueConstraint('fund_id', name='ord_debt_fund_id_key')
    )
    op.create_index('ix_ord_debt_id', 'ord_debt', ['id'], unique=False)
    op.create_table('ord_loan',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('fund_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('loan_position', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('settlement_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('payment_detail_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('paid_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fund_id'], ['ord_fund.id'], name='ord_loan_fund_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ord_loan_pkey')
    )
    op.create_index('ix_ord_loan_id', 'ord_loan', ['id'], unique=False)
    op.create_table('fnc_commission',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('merchant_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('pgw_commission_constant', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('pgw_commission_rate', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('pgw_fee_constant', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pgw_fee_rate', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('credit_commission_constant', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('credit_commission_rate', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('credit_limit', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('decrease_fee_on_pay_gw_settle', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('decrease_commission_on_refund', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='fnc_commission_pkey')
    )
    op.create_index('ix_fnc_commission_id', 'fnc_commission', ['id'], unique=False)
    op.create_index('fnc_commission.merchant_v_category', 'fnc_commission', ['merchant_id', 'category'], unique=False)
    op.drop_index('merchant_id', table_name='ord_commission')
    op.drop_index(op.f('ix_ord_commission_id'), table_name='ord_commission')
    op.drop_table('ord_commission')
    op.drop_index(op.f('ix_fnc_refund_merchant_id'), table_name='fnc_refund')
    op.drop_index(op.f('ix_fnc_refund_id'), table_name='fnc_refund')
    op.drop_table('fnc_refund')
    # ### end Alembic commands ###
